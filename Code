pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "your-dockerhub-username/flask-web-app"
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Test Application') {
            steps {
                script {
                    sh '''
                    docker run --rm -d --name test-container -p 5000:5000 $DOCKER_IMAGE
                    sleep 5
                    curl -f http://localhost:5000 || exit 1
                    docker stop test-container
                    '''
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    script {
                        sh '''
                        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                        docker push $DOCKER_IMAGE
                        '''
                    }
                }
            }
        }

        stage('Deploy to Server') {
            steps {
                sshagent(['ssh-server-key']) {
                    sh '''
                    ssh user@server "docker pull $DOCKER_IMAGE && docker stop flask-app || true && docker rm flask-app || true && docker run -d --name flask-app -p 5000:5000 $DOCKER_IMAGE"
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo "Pipeline executed successfully."
        }
        failure {
            echo "Pipeline failed."
        }
    }
}
